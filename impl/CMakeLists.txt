message(STATUS "execute impl/CMakeLists.txt ...")

set(src_file "")
fetch_files_with_suffix_recursively(${GEMM_SOURCE_DIR}/impl "cpp" src_file)

set(LIBRARY_OUTPUT_PATH ${GEMM_BINARY_DIR}/lib)
set(ARCHIVE_OUTPUT_DIRECTORY ${GEMM_BINARY_DIR}/lib)

if(USE_GPU)
    set(cuda_src_file "")
    fetch_files_with_suffix_recursively(${GEMM_SOURCE_DIR}/impl "cu" cuda_src_file)

    if(BUILD_SHARED)
        cuda_compile(cuda_c_src_objs SHARED ${cuda_src_file})
        add_library(impl SHARED ${cuda_c_src_objs} ${src_file})
        target_link_libraries(impl ${CUDA_LINKER_LIBS})
    else()
        cuda_compile(cuda_c_src_objs_static STATIC ${cuda_src_file})
        add_library(impl_static STATIC ${cuda_c_src_objs_static} ${src_file})
        target_link_libraries(impl_static ${CUDA_LINKER_LIBS})
    endif()

else()
    if(BUILD_SHARED)
        add_library(impl SHARED ${src_file})
    else()
        add_library(impl_static STATIC ${src_file})
    endif()
endif()

if(BUILD_SHARED)
    set_target_properties(impl PROPERTIES CLEAN_DIRECT_OUTPUT 1)
    set_target_properties(impl PROPERTIES VERSION 1.0 SOVERSION 1)
    set_target_properties(impl PROPERTIES LINK_FLAGS "")
    if(USE_CBLAS)
        target_link_libraries(impl ${ATLAS_LIBRARIES})
    endif()
    if(USE_CXX11_THREAD)
        find_package(Threads)
        target_link_libraries(impl ${CMAKE_THREAD_LIBS_INIT})
    endif()
else()
    set_target_properties(impl_static PROPERTIES OUTPUT_NAME "impl")
    set_target_properties(impl_static PROPERTIES CLEAN_DIRECT_OUTPUT 1)
    #set_target_properties(impl_static PROPERTIES LINK_FLAGS "")
    #set_target_properties(impl_static PROPERTIES LIBRARY_OUTPUT_PATH ${GEMM_BINARY_DIR}/lib)
    if(USE_CBLAS)
        target_link_libraries(impl ${ATLAS_LIBRARIES})
    endif()
    if(USE_CXX11_THREAD)
        find_package(Threads)
        target_link_libraries(impl ${CMAKE_THREAD_LIBS_INIT})
    endif()
endif()